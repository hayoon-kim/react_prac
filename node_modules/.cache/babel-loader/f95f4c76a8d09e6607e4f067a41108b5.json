{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dimpl\\\\Practice\\\\HTML\\\\DreamCoding\\\\react-basic\\\\youtube\\\\src\\\\app.jsx\",\n    _s = $RefreshSig$();\n\nimport './app.css';\nimport React, { useEffect, useState } from 'react';\nimport VideoList from './components/video_list/video_list';\nimport Search_header from './components/seach_header/search_header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  //처음엔 텅텅 빈 비디오의 목록\n  const [videos, setVideos] = useState([]); //마운트가 되어 업데이트가 되면 쓸 수 있음\n\n  useEffect(() => {\n    const requestOptions = {\n      method: 'GET',\n      redirect: 'follow' //fetch를 써서 request를 할 때 옵션을 전달하는 것\n\n    };\n    fetch(\"https://youtube.googleapis.com/youtube/v3/videos?part=snippet&chart=mostPopular&maxResults=25&key=AIzaSyBlk3LfwMCisJM00G2Hf1_Ffq94kMx9KlM\", requestOptions).then(response => response.json()) //text로 적혀있을테지만 json으로 변경해서 가져오는게 좋음.\n    .then(result => setVideos(result.items)).catch(error => console.log('error', error));\n  }, []); // []안적으면 state나 prop이 업데이트 될때마다 반복 호출됨\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.app,\n    children: [/*#__PURE__*/_jsxDEV(Search_header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(VideoList, {\n      videos: videos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"39g9r2hk3cJXA16k+db4Z3Rqykw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","VideoList","Search_header","App","videos","setVideos","requestOptions","method","redirect","fetch","then","response","json","result","items","catch","error","console","log","styles","app"],"sources":["C:/Users/dimpl/Practice/HTML/DreamCoding/react-basic/youtube/src/app.jsx"],"sourcesContent":["\nimport './app.css';\nimport React, { useEffect, useState } from 'react';\nimport VideoList from './components/video_list/video_list';\nimport Search_header from './components/seach_header/search_header';\n\nfunction App() {\n\n  //처음엔 텅텅 빈 비디오의 목록\n  const [videos, setVideos] = useState([]);\n\n  //마운트가 되어 업데이트가 되면 쓸 수 있음\n  useEffect(()=>{\n    const requestOptions = {\n      method: 'GET',\n      redirect: 'follow', //fetch를 써서 request를 할 때 옵션을 전달하는 것\n    };\n    \n    fetch(\"https://youtube.googleapis.com/youtube/v3/videos?part=snippet&chart=mostPopular&maxResults=25&key=AIzaSyBlk3LfwMCisJM00G2Hf1_Ffq94kMx9KlM\", requestOptions)\n      .then(response => response.json()) //text로 적혀있을테지만 json으로 변경해서 가져오는게 좋음.\n      .then(result => setVideos(result.items))\n      .catch(error => console.log('error', error));\n  }, []);\n  // []안적으면 state나 prop이 업데이트 될때마다 반복 호출됨\n\n\n  return (\n    <div className={styles.app}>\n    <Search_header />\n    <VideoList videos={videos} />\n    \n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AACA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,OAAOC,aAAP,MAA0B,yCAA1B;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EAEb;EACA,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,EAAD,CAApC,CAHa,CAKb;;EACAD,SAAS,CAAC,MAAI;IACZ,MAAMO,cAAc,GAAG;MACrBC,MAAM,EAAE,KADa;MAErBC,QAAQ,EAAE,QAFW,CAED;;IAFC,CAAvB;IAKAC,KAAK,CAAC,2IAAD,EAA8IH,cAA9I,CAAL,CACGI,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EACqC;IADrC,CAEGF,IAFH,CAEQG,MAAM,IAAIR,SAAS,CAACQ,MAAM,CAACC,KAAR,CAF3B,EAGGC,KAHH,CAGSC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAArB,CAHlB;EAID,CAVQ,EAUN,EAVM,CAAT,CANa,CAiBb;;EAGA,oBACE;IAAK,SAAS,EAAEG,MAAM,CAACC,GAAvB;IAAA,wBACA,QAAC,aAAD;MAAA;MAAA;MAAA;IAAA,QADA,eAEA,QAAC,SAAD;MAAW,MAAM,EAAEhB;IAAnB;MAAA;MAAA;MAAA;IAAA,QAFA;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAOD;;GA3BQD,G;;KAAAA,G;AA6BT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}